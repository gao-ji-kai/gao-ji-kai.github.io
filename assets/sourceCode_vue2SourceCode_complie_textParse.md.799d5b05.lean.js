import{_ as e,o,c,k as n,a as s,t as a,Q as l}from"./chunks/framework.fd95ed2e.js";const f=JSON.parse('{"title":"模板解析阶段(文本解析器)","description":"","frontmatter":{"title":"模板解析阶段(文本解析器)"},"headers":[],"relativePath":"sourceCode/vue2SourceCode/complie/textParse.md","filePath":"sourceCode/vue2SourceCode/complie/textParse.md"}'),t={name:"sourceCode/vue2SourceCode/complie/textParse.md"},r=l("",22),E=n("code",null,"tagRE",-1),y=n("code",null,"tagRE",-1),i=n("code",null,"tagRE",-1),d=n("code",null,"delimiters",-1),u=n("code",null,"delimiters",-1),F=n("code",null,"Vue",-1),b=n("code",null,"%",-1),m=l("",14),h=n("code",null,"index",-1),x=n("code",null,"lastIndex",-1),g=n("code",null,"index",-1),C=n("code",null,"_s()",-1),A=n("code",null,"tokens",-1),D=n("code",null,"{'@binding': exp}",-1),k=n("code",null,"rawTokens",-1),v=l("",10);function B(p,_,I,T,R,w){return o(),c("div",null,[r,n("p",null,[s("函数体内首先定义了变量"),E,s("，表示一个正则表达式。这个正则表达式是用来检查文本中是否包含变量的。我们知道，通常我们在模板中写变量时是这样写的：hello "+a(p.name)+"。这里用",1),n("code",null,a(),1),s("包裹的内容就是变量。所以我们就知道，"),y,s("是用来检测文本内是否有"),n("code",null,a(),1),s("。而"),i,s("又是可变的，它是根据是否传入了"),d,s("参数从而又不同的值，也就是说如果没有传入"),u,s("参数，则是检测文本是否包含"),n("code",null,a(),1),s("，如果传入了值，就会检测文本是否包含传入的值。换句话说在开发"),F,s("项目中，用户可以自定义文本内包含变量所使用的符号，例如你可以使用"),b,s("包裹变量如：hello %name%。")]),m,n("p",null,[s("如果"),h,s("不大于"),x,s("，那说明"),g,s("也为0，即该文本一开始就是变量，例如："),n("code",null,a(p.name)+"hello",1),s("。那么此时变量前面没有纯文本，那就不用截取，直接取出匹配结果的第一个元素变量名，将其用"),C,s("包裹存入"),A,s("中，同时再把变量名构造成"),D,s("存入"),k,s("中，如下：")]),v])}const j=e(t,[["render",B]]);export{f as __pageData,j as default};
